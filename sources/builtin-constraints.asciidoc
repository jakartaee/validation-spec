// Jakarta Validation
//
// License: Apache License, Version 2.0
// See the license.txt file in the root directory or <http://www.apache.org/licenses/LICENSE-2.0>.
:validation-api-source-dir: ../target/validation-api/

[[builtinconstraints]]

== Built-in Constraint definitions

The specification defines a small set of built-in constraints. Their usage is encouraged both in regular constraint declarations and as composing constraints. Using this set of constraints will enhance portability of your constraints across constraint-consuming frameworks relying on the metadata API (such as client side validation frameworks or database schema generation frameworks).

Built-in annotations are annotated with an empty [classname]`@Constraint` annotation to avoid any dependency between the specification API and a specific implementation. [tck-testable]#Each {spec-name-bv} provider must recognize built-in constraint annotations as valid constraint definitions and provide compliant constraint implementations for each.# [tck-testable]#The built-in constraint validation implementation is having a lower priority than an XML mapping definition.# In other words [classname]`ConstraintValidator` implementations for built-in constraints can be overridden by using the XML mapping (see <<xml-mapping-constraintdefinition>>).

All built-in constraints are in the [classname]`jakarta.validation.constraints` package. Here is the list of constraints and their declaration.

[[builtinconstraints-null]]
=== `@Null` constraint

[role="api"]
.[tck-testable]#`@Null` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/Null.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-notnull]]
=== `@NotNull` constraint

[role="api"]
.[tck-testable]#`@NotNull` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/NotNull.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-asserttrue]]
=== `@AssertTrue` constraint

[role="api"]
.[tck-testable]#`@AssertTrue` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/AssertTrue.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-assertfalse]]
=== `@AssertFalse` constraint

[role="api"]
.[tck-testable]#`@AssertFalse` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/AssertFalse.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-min]]
=== `@Min` constraint

[role="api"]
.[tck-testable]#`@Min` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/Min.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-max]]
=== `@Max` constraint

[role="api"]
.[tck-testable]#`@Max` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/Max.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-decimalmin]]
=== `@DecimalMin` constraint

[role="api"]
.[tck-testable]#`@DecimalMin` constraint#
====
[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/DecimalMin.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-decimalmax]]
=== `@DecimalMax` constraint

[role="api"]
.[tck-testable]#`@DecimalMax` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/DecimalMax.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-negative]]
=== `@Negative` constraint

[role="api"]
.[tck-testable]#`@Negative` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/Negative.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-negativeorzero]]
=== `@NegativeOrZero` constraint

[role="api"]
.[tck-testable]#`@NegativeOrZero` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/NegativeOrZero.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-positive]]
=== `@Positive` constraint

[role="api"]
.[tck-testable]#`@Positive` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/Positive.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-positiveorzero]]
=== `@PositiveOrZero` constraint

[role="api"]
.[tck-testable]#`@PositiveOrZero` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/PositiveOrZero.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-size]]
=== `@Size` constraint

[role="api"]
.[tck-testable]#`@Size` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/Size.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-digits]]
=== `@Digits` constraint

[role="api"]
.[tck-testable]#`@Digits` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/Digits.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-past]]
=== `@Past` constraint

[role="api"]
.[tck-testable]#`@Past` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/Past.java[lines=7..8;29..-1]
----

====

[[builtinconstraints-pastorpresent]]
=== `@PastOrPresent` constraint

[role="api"]
.[tck-testable]#`@PastOrPresent` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/PastOrPresent.java[lines=7..8;30..-1]
----

====

[[builtinconstraints-future]]
=== `@Future` constraint

[role="api"]
.[tck-testable]#`@Future` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/Future.java[lines=7..8;29..-1]
----

====

[[builtinconstraints-futureorpresent]]
=== `@FutureOrPresent` constraint

[role="api"]
.[tck-testable]#`@FutureOrPresent` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/FutureOrPresent.java[lines=7..8;30..-1]
----

====

[[builtinconstraints-pattern]]
=== `@Pattern` constraint

[role="api"]
.[tck-testable]#`@Pattern` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/Pattern.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-notempty]]
=== `@NotEmpty` constraint

[role="api"]
.[tck-testable]#`@NotEmpty` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/NotEmpty.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-notblank]]
=== `@NotBlank` constraint

[role="api"]
.[tck-testable]#`@NotBlank` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/NotBlank.java[lines=7..8;26..-1]
----

====

[[builtinconstraints-email]]
=== `@Email` constraint

[role="api"]
.[tck-testable]#`@Email` constraint#
====

[source, JAVA, indent=0]
----
include::{validation-api-source-dir}jakarta/validation/constraints/Email.java[lines=7..8;26..-1]
----

====
